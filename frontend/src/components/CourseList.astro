---
import BackToHome from '../components/BackToHome.astro';
---

<BackToHome />

<ul id="cursos-list" class="space-y-4">
  <p class="text-gray-500">Cargando cursos...</p>
</ul>

<script is:inline>
  document.addEventListener("DOMContentLoaded", async () => {
    const listaCursos = document.getElementById("cursos-list");

    // URL del API para obtener los cursos
    const API_URL = "http://localhost:8003/api/cursos";

    try {
      const response = await fetch(API_URL);
      if (!response.ok) throw new Error("Error al obtener los cursos");

      const cursos = await response.json();

      if (!Array.isArray(cursos) || cursos.length === 0) {
        listaCursos.innerHTML = `<p class="text-gray-500">No hay cursos registrados.</p>`;
        return;
      }

      listaCursos.innerHTML = cursos.map(curso => `
        <li class="p-4 border rounded-lg shadow-sm">
          <div class="flex justify-between items-center">
            <div>
              <h3 class="text-lg font-semibold">${curso.nombre}</h3>
              <p class="text-gray-600">${curso.descripcion}</p>
              <p class="text-gray-600">Créditos: ${curso.creditos}</p>
            </div>
            <div class="flex space-x-2">
              <button data-id="${curso.id}"class="flex items-center space-x-2 bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-all delete-button">
            Eliminar
              </button>
            </div>
          </div>
        </li>
      `).join("");

    } catch (error) {
      listaCursos.innerHTML = `<p class="text-red-500">Error al cargar los cursos.</p>`;
    }
  });
</script>


<!-- Modal de Confirmación de Eliminación (¿Estás seguro?) -->
<div id="confirmDeleteModal" class="fixed inset-0 bg-black/50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-xl shadow-lg p-6 w-96 text-center">
    <h3 class="text-xl font-semibold text-red-600 mb-2">¿Estás seguro de eliminar este curso?</h3>
    <p class="text-gray-500 mb-4">Esta acción no se puede deshacer.</p>
    <div class="flex justify-center space-x-4">
      <button
        id="cancelDeleteButton"
        class="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-all"
      >
        Cancelar
      </button>
      <button
        id="confirmDeleteButton"
        class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-all"
      >
        Eliminar
      </button>
    </div>
  </div>
</div>

<!-- Modal de Confirmación de Eliminación -->
<div id="deleteConfirmationModal" class="fixed inset-0 bg-black/50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-xl shadow-lg p-6 w-96 text-center">
    <!-- GIF de confirmación -->
    <img
      src="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExYW56ZzU1b3JqdnI3c2ZudTJ2NThyZDEzNTd5Mjhma2ZsajByMmsyaiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/JSWu7FReUWYvVbOfEs/giphy.gif"
      alt="GIF de confirmación"
      class="mx-auto mb-4 rounded-lg"
      style="max-width: 100px;"
    />
    <h3 class="text-xl font-semibold text-red-600 mb-2">¡Curso eliminado con éxito!</h3>
    <p class="text-gray-500 mb-4">El curso ha sido eliminado correctamente.</p>
    <button
      id="closeDeleteConfirmationModalButton"
      class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-all"
    >
      Cerrar
    </button>
  </div>
</div>

<script is:inline>
  document.addEventListener("DOMContentLoaded", async () => {
    const listaCursos = document.getElementById("cursos-list");
    const API_URL = "http://localhost:8003/api/cursos";

    try {
      const response = await fetch(API_URL);
      if (!response.ok) throw new Error("Error al obtener los cursos");

      const cursos = await response.json();

      if (!Array.isArray(cursos) || cursos.length === 0) {
        listaCursos.innerHTML = `<p class="text-gray-500">No hay cursos registrados.</p>`;
        return;
      }

      listaCursos.innerHTML = cursos.map(curso => `
        <li class="p-4 border rounded-lg shadow-sm">
          <div class="flex justify-between items-center">
            <div>
              <h3 class="text-lg font-semibold">${curso.nombre}</h3>
              <p class="text-gray-600">${curso.descripcion}</p>
              <p class="text-gray-600">Créditos: ${curso.creditos}</p>
            </div>
            <div class="flex space-x-2">
              <button data-id="${curso.id}" class="delete-button bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-all">
                Eliminar
              </button>
            </div>
          </div>
        </li>
      `).join("");

      let cursoId = null;

      // Delegación de eventos para los botones de eliminar
      listaCursos.addEventListener("click", (event) => {
        const target = event.target;

        if (target.classList.contains("delete-button")) {
          cursoId = target.getAttribute("data-id");
          document.getElementById("confirmDeleteModal").classList.remove("hidden");
        }
      });

      // Cancelar la eliminación
      document.getElementById("cancelDeleteButton").addEventListener("click", () => {
        document.getElementById("confirmDeleteModal").classList.add("hidden");
      });

      // Confirmar la eliminación
      document.getElementById("confirmDeleteButton").addEventListener("click", async () => {
        try {
          const response = await fetch(`${API_URL}/${cursoId}`, { method: "DELETE" });

          if (response.ok) {
            document.getElementById("confirmDeleteModal").classList.add("hidden");
            document.getElementById("deleteConfirmationModal").classList.remove("hidden");

            document.getElementById("closeDeleteConfirmationModalButton").addEventListener("click", () => {
              document.getElementById("deleteConfirmationModal").classList.add("hidden");
              window.location.reload();
            });
          } else {
            throw new Error("Error al eliminar el curso");
          }
        } catch (error) {
          alert(error instanceof Error ? error.message : "Ocurrió un error inesperado");
        }
      });

    } catch (error) {
      listaCursos.innerHTML = `<p class="text-red-500">Error al cargar los cursos.</p>`;
    }
  });
</script>