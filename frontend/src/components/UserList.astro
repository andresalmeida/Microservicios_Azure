---
import BackToHome from '../components/BackToHome.astro';
---

<BackToHome />

<ul id="estudiantes-list" class="space-y-4">
  <p class="text-gray-500">Cargando estudiantes...</p>
</ul>

<script is:inline>
  document.addEventListener("DOMContentLoaded", async () => {
    const listaEstudiantes = document.getElementById("estudiantes-list");

    // Definir la URL fija en localhost
    const API_URL = "http://localhost:8002/api/estudiantes";

    try {
      const response = await fetch(API_URL);
      if (!response.ok) throw new Error("Error al obtener los estudiantes");

      const estudiantes = await response.json();

      if (!Array.isArray(estudiantes) || estudiantes.length === 0) {
        listaEstudiantes.innerHTML = `<p class="text-gray-500">No hay estudiantes registrados.</p>`;
        return;
      }

      listaEstudiantes.innerHTML = estudiantes.map(estudiante => `
        <li class="p-4 border rounded-lg shadow-sm">
          <div class="flex justify-between items-center">
            <div>
              <h3 class="text-lg font-semibold">${estudiante.nombre} ${estudiante.apellido}</h3>
              <p class="text-gray-600">${estudiante.email}</p>
              <p class="text-gray-600">Teléfono: ${estudiante.telefono}</p>
            </div>
            <div class="flex space-x-2">
              <button data-id="${estudiante.id}" class="flex items-center space-x-2 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-all edit-button">
                Editar
              </button>
              <button data-id="${estudiante.id}" class="flex items-center space-x-2 bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-all delete-button">
                Eliminar
              </button>
            </div>
          </div>
        </li>
      `).join("");

    } catch (error) {
      listaEstudiantes.innerHTML = `<p class="text-red-500">Error al cargar los estudiantes.</p>`;
    }
  });
</script>


<!-- Modal de Edición -->
<div id="editModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-lg shadow-lg p-6 w-96">
    <h3 class="text-lg font-semibold mb-4">Editar Estudiante</h3>
    <form id="editForm" class="space-y-4">
      <!-- Nombre -->
      <div>
        <label for="editNombre" class="block">Nombre:</label>
        <input
          type="text"
          id="editNombre"
          name="nombre"
          class="p-2 border rounded w-full"
          required
        />
      </div>

      <!-- Apellido -->
      <div>
        <label for="editApellido" class="block">Apellido:</label>
        <input
          type="text"
          id="editApellido"
          name="apellido"
          class="p-2 border rounded w-full"
          required
        />
      </div>

      <!-- Email -->
      <div>
        <label for="editEmail" class="block">Email:</label>
        <input
          type="email"
          id="editEmail"
          name="email"
          class="p-2 border rounded w-full"
          required
        />
      </div>

      <!-- Fecha de Nacimiento -->
      <div>
        <label for="editFechaNacimiento" class="block">Fecha de Nacimiento:</label>
        <input
          type="date"
          id="editFechaNacimiento"
          name="fechaNacimiento"
          class="p-2 border rounded w-full"
          required
        />
      </div>

      <!-- Teléfono -->
      <div>
        <label for="editTelefono" class="block">Teléfono:</label>
        <input
          type="tel"
          id="editTelefono"
          name="telefono"
          class="p-2 border rounded w-full"
          required
        />
      </div>

      <!-- Botones -->
      <div class="flex justify-end space-x-2">
        <button
          type="button"
          id="closeEditModalButton"
          class="bg-gray-500 text-white p-2 rounded"
        >
          Cancelar
        </button>
        <button
          type="submit"
          class="bg-blue-500 text-white p-2 rounded"
        >
          Guardar Cambios
        </button>
      </div>
    </form>
  </div>
</div>

<!-- Modal de Confirmación de Edición -->
<div id="editConfirmationModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-lg shadow-lg p-6 w-96 text-center">
    <!-- GIF de confirmación -->
    <img
      src="https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExOGJrcmxod3hiNGo5c3ZkaGtheDUxMWpzdWUyMmpnMDU4Y3p1M2g4diZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/R7m04yMaGWVeE/giphy.gif"
      alt="GIF de confirmación"
      class="mx-auto mb-4 rounded-lg"
      style="max-width: 100px;"
    />
    <h3 class="text-xl font-semibold text-blue-600 mb-2">¡Estudiante actualizado con éxito!</h3>
    <p class="text-gray-500 mb-4">El estudiante ha sido actualizado correctamente.</p>
    <button
      id="closeEditConfirmationModalButton"
      class="bg-blue-500 text-white font-medium py-2 px-4 rounded-md hover:bg-blue-600 transition duration-200"
    >
      Cerrar
    </button>
  </div>
</div>

<!-- Modal de Confirmación de Eliminación -->
<div id="deleteConfirmationModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-lg shadow-lg p-6 w-96 text-center">
    <!-- GIF de confirmación -->
    <img
      src="https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExbmh3M2Q0aTZvbTQ5cWg3YWtsaWF0NHg4NmVrYTIxamRpbW50NWw1NiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/gXhBZfzijya76/giphy.gif"
      alt="GIF de confirmación"
      class="mx-auto mb-4 rounded-lg"
      style="max-width: 100px;"
    />
    <h3 class="text-xl font-semibold text-red-600 mb-2">¡Estudiante eliminado con éxito!</h3>
    <p class="text-gray-500 mb-4">El estudiante ha sido eliminado correctamente.</p>
    <button
      id="closeDeleteConfirmationModalButton"
      class="bg-red-500 text-white font-medium py-2 px-4 rounded-md hover:bg-red-600 transition duration-200"
    >
      Cerrar
    </button>
  </div>
</div>

<!-- Modal de Confirmación de Eliminación (¿Estás seguro?) -->
<div id="confirmDeleteModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
  <div class="bg-white rounded-lg shadow-lg p-6 w-96 text-center">
    <h3 class="text-xl font-semibold text-red-600 mb-2">¿Estás seguro de eliminar este estudiante?</h3>
    <p class="text-gray-500 mb-4">Esta acción no se puede deshacer.</p>
    <div class="flex justify-center space-x-4">
      <button
        id="cancelDeleteButton"
        class="bg-gray-500 text-white font-medium py-2 px-4 rounded-md hover:bg-gray-600 transition duration-200"
      >
        Cancelar
      </button>
      <button
        id="confirmDeleteButton"
        class="bg-red-500 text-white font-medium py-2 px-4 rounded-md hover:bg-red-600 transition duration-200"
      >
        Eliminar
      </button>
    </div>
  </div>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const editButtons = document.querySelectorAll('.edit-button');
    const deleteButtons = document.querySelectorAll('.delete-button');
    const editModal = document.getElementById('editModal');
    const editConfirmationModal = document.getElementById('editConfirmationModal');
    const deleteConfirmationModal = document.getElementById('deleteConfirmationModal');
    const confirmDeleteModal = document.getElementById('confirmDeleteModal');
    const closeEditModalButton = document.getElementById('closeEditModalButton');
    const closeEditConfirmationModalButton = document.getElementById('closeEditConfirmationModalButton');
    const closeDeleteConfirmationModalButton = document.getElementById('closeDeleteConfirmationModalButton');
    const cancelDeleteButton = document.getElementById('cancelDeleteButton');
    const confirmDeleteButton = document.getElementById('confirmDeleteButton');
    const editForm = document.getElementById('editForm');

    // Variables para almacenar el ID del estudiante que se está editando o eliminando
    let estudianteId;

    // Manejar el clic en el botón "Editar"
    editButtons.forEach((button) => {
      button.addEventListener('click', async () => {
        estudianteId = button.getAttribute('data-id');

        // Obtener los datos del estudiante
        try {
          const response = await fetch(`http://localhost:8002/api/estudiantes/${estudianteId}`);
          const estudiante = await response.json();

          // Rellenar el formulario con los datos del estudiante
          document.getElementById('editNombre').value = estudiante.nombre;
          document.getElementById('editApellido').value = estudiante.apellido;
          document.getElementById('editEmail').value = estudiante.email;
          document.getElementById('editFechaNacimiento').value = estudiante.fechaNacimiento;
          document.getElementById('editTelefono').value = estudiante.telefono;

          // Mostrar el modal de edición
          editModal.classList.remove('hidden');
        } catch (error) {
          alert('Error al cargar los datos del estudiante');
        }
      });
    });

    // Cerrar el modal de edición
    closeEditModalButton.addEventListener('click', () => {
      editModal.classList.add('hidden');
    });

    // Manejar el envío del formulario de edición
    editForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const data = new FormData(editForm);
      const estudianteActualizado = {
        nombre: data.get('nombre'),
        apellido: data.get('apellido'),
        email: data.get('email'),
        fechaNacimiento: data.get('fechaNacimiento'),
        telefono: data.get('telefono'),
      };

      try {
        const response = await fetch(`http://localhost:8002/api/estudiantes/${estudianteId}`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(estudianteActualizado),
        });

        if (response.ok) {
          // Mostrar el modal de confirmación de edición
          editConfirmationModal.classList.remove('hidden');
          editModal.classList.add('hidden'); // Cerrar el modal de edición

          // Cerrar el modal de confirmación y recargar la página
          closeEditConfirmationModalButton.addEventListener('click', () => {
            editConfirmationModal.classList.add('hidden');
            window.location.reload(); // Recargar la página para ver los cambios
          });
        } else {
          throw new Error('Error al actualizar el estudiante');
        }
      } catch (error) {
        alert(error instanceof Error ? error.message : 'Ocurrió un error inesperado');
      }
    });

    // Manejar el clic en el botón "Eliminar"
    deleteButtons.forEach((button) => {
      button.addEventListener('click', () => {
        estudianteId = button.getAttribute('data-id');

        // Mostrar el modal de confirmación de eliminación
        confirmDeleteModal.classList.remove('hidden');
      });
    });

    // Cancelar la eliminación
    cancelDeleteButton.addEventListener('click', () => {
      confirmDeleteModal.classList.add('hidden');
    });

    // Confirmar la eliminación
    confirmDeleteButton.addEventListener('click', async () => {
      try {
        const response = await fetch(`http://localhost:8002/api/estudiantes/${estudianteId}`, {
          method: 'DELETE',
        });

        if (response.ok) {
          // Mostrar el modal de confirmación de eliminación
          confirmDeleteModal.classList.add('hidden');
          deleteConfirmationModal.classList.remove('hidden');

          // Cerrar el modal de confirmación y recargar la página
          closeDeleteConfirmationModalButton.addEventListener('click', () => {
            deleteConfirmationModal.classList.add('hidden');
            window.location.reload(); // Recargar la página para ver los cambios
          });
        } else {
          throw new Error('Error al eliminar el estudiante');
        }
      } catch (error) {
        alert(error instanceof Error ? error.message : 'Ocurrió un error inesperado');
      }
    });

    // Cerrar el modal de confirmación de eliminación
    closeDeleteConfirmationModalButton.addEventListener('click', () => {
      deleteConfirmationModal.classList.add('hidden');
    });
  });
</script>